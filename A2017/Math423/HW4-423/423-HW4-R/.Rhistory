y<-data1$y
View(data1)
#Read in data set 1
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-1.txt"
data1<-read.table(file1,header=TRUE)
plot(data1$x,data1$y,pch=18)
x1<-data1$x
y1<-data1$y
fit.RP = lm(y1 ~ x1)
fit.RP
names(fit)
names(fit.RP)
fit.RP$coefficients
knit_with_parameters('C:/Users/Fred/Desktop/Mcgill/Math423/HW1/Math423-HW1-260482457.Rmd')
#Read in data set 1
fit.RP
plot(x1,y)
abline(x1,y)
plot(x1,residuals)
x1
residuals
ris
#Read in data set 1
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-1.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y<-data1$y
fit.RP<-lm(y~x1)
beta0 = fit.RP$coefficients[1]
beta1 = fit.RP$coefficients[2]
points = beta0 + beta1 * x1
ris = y - points
plot(x1,ris)
coef(fit.RP)
residuals(fit.RP)
plot(x1,ris)
plot(x1,residuals(fit.RP))
plot(residuals(fit.RP))
# Chunk 1
#Read in data set 1
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-1.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y<-data1$y
fit.RP<-lm(y~x1)
beta0 = fit.RP$coefficients[1]
beta1 = fit.RP$coefficients[2]
# Chunk 2
plot(x1,y)
abline(beta0, beta1)
# Chunk 3
plot(residuals(fit.RP))
# Chunk 4
#Read in data set 1
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-2.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y<-data1$y
fit.RP<-lm(y~x1)
beta0 = fit.RP$coefficients[1]
beta1 = fit.RP$coefficients[2]
# Chunk 5
plot(x1,y)
abline(beta0, beta1)
# Chunk 6
plot(residuals(fit.RP))
# Chunk 7
#Read in data set 1
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-3.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y<-data1$y
fit.RP<-lm(y~x1)
beta0 = fit.RP$coefficients[1]
beta1 = fit.RP$coefficients[2]
# Chunk 8
plot(x1,y)
abline(beta0, beta1)
# Chunk 9
plot(residuals(fit.RP))
<<echo = TRUE, cache = TRUE>>=
#Read in data set 1
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-2.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y<-data1$y
fit.RP<-lm(y~x1)
beta0 = fit.RP$coefficients[1]
beta1 = fit.RP$coefficients[2]
@
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-2.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y<-data1$y
fit.RP<-lm(y~x1)
beta0 = fit.RP$coefficients[1]
beta1 = fit.RP$coefficients[2]
plot(x1,y)
abline(beta0, beta1)
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-3.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y<-data1$y
fit.RP<-lm(y~x1)
beta0 = fit.RP$coefficients[1]
beta1 = fit.RP$coefficients[2]
<<echo = TRUE, cache = TRUE>>=
plot(x1,y)
plot(x1,y)
plot(x1,y)
plot(x1,y)
abline(beta0, beta1)
plot(residuals(fit.RP))
# Chunk 1
#Read in data set 1
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-1.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y1<-data1$y
fit.RP1<-lm(y1~x1)
beta0_1 = fit.RP1$coefficients[1]
beta1_1 = fit.RP1$coefficients[2]
res1 = residuals(fit.RP1)
file2<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-2.txt"
data2<-read.table(file2,header=TRUE)
x2<-data2$x
y2<-data2$y
fit.RP2<-lm(y2~x2)
beta0_2 = fit.RP2$coefficients[1]
beta1_2 = fit.RP2$coefficients[2]
res2 = residuals(fit.RP2)
file3<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-3.txt"
data3<-read.table(file3,header=TRUE)
x3<-data3$x
y3<-data3$y
fit.RP3<-lm(y3~x3)
beta0_3 = fit.RP3$coefficients[1]
beta1_3 = fit.RP3$coefficients[2]
res3 = residuals(fit.RP3)
# Chunk 2
plot(x1,y1)
abline(beta0_1, beta1_1)
# Chunk 3
plot(res1)
# Chunk 4
plot(x2,y2)
abline(beta0_2, beta1_2)
# Chunk 5
plot(res2)
# Chunk 6
plot(x3,y3)
abline(beta0_3, beta1_3)
# Chunk 7
plot(res3)
res1
library(readxl)
library(forestplot)
temp = read_excel("C:\\Users\\Fred\\Desktop\\MUHC\\presentation_forest.xlsx")
rm(list = ls)
rm(list = ls())
library(readxl)
library(forestplot)
temp = read_excel("C:\\Users\\Fred\\Desktop\\MUHC\\presentation_forest.xlsx")
View(temp)
temp[length(temp)] = NULL
temp[,4:9] = sapply(temp[,4:9],as.numeric)
colnames(temp)[which(names(temp) == "Sn (95%CI)")] <- "sn_mean"
colnames(temp)[5] = "sn_lower"
colnames(temp)[6] = "sn_upper"
colnames(temp)[3] = "humanOR"
colnames(temp)[7] = "sp_mean"
colnames(temp)[8] = "sp_lower"
colnames(temp)[9] = "sp_upper"
forestplot(textframe,temp$sn_mean,temp$sn_lower,temp$sn_upper,graphwidth = "auto", zero = 0.6,
boxsize = 0.1,col = fpColors(box=c("darkred")))
source('~/forest_plot.R', echo=TRUE)
forestplot(textframe,temp$sn_mean,temp$sn_lower,temp$sn_upper,graphwidth = "auto", zero = 0.6,
boxsize = 0.1,col = fpColors(box=c("darkred")))
forestplot(textframe,temp$sn_mean,temp$sn_lower,temp$sn_upper,graphwidth = "auto", zero = 0.6,
source('~/forest_plot.R', echo=TRUE)
debugSource('~/forest_plot.R', echo=TRUE)
debugSource('~/forest_plot.R', echo=TRUE)
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.6,
boxsize = 0.1,col = fpColors(box=c("darkred")))
library(readxl)
library(forestplot)
temp = read_excel("C:\\Users\\Fred\\Desktop\\MUHC\\presentation_forest_screens.xlsx")
temp[,4:9] = sapply(temp[,4:9],as.numeric)
colnames(temp)[which(names(temp) == "Sn (95%CI)")] <- "sn_mean"
colnames(temp)[5] = "sn_lower"
colnames(temp)[6] = "sn_upper"
colnames(temp)[7] = "sp_mean"
colnames(temp)[8] = "sp_lower"
colnames(temp)[9] = "sp_upper"
colnames(temp)[3] = "humanOR"
append(temp$Reference, list(x=""), 1)
textframe = cbind(temp$Reference,temp$Version,temp$humanOR)
subgps <- c(2,3,5,7,9,10,12)
textframe[subgps] <- paste("  ",textframe[subgps])
graphwidth = 3.5
forestplot(textframe,temp$sn_mean,temp$sn_lower,temp$sn_upper,graphwidth = "auto", zero = 0.6,
boxsize = 0.1,col = fpColors(box=c("blue")))
debugSource('~/forest_plot.R', echo=TRUE)
debugSource('~/forest_plot.R', echo=TRUE)
debugSource('~/forest_plot.R', echo=TRUE)
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.6,
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.6,
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.6,
boxsize = 0.1,col = fpColors(box=c("darkred")))
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.6,
boxsize = 0.1,col = fpColors(box=c("darkred")))
source('~/forest_plot.R', echo=TRUE)
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.6,
boxsize = 0.1,col = fpColors(box=c("darkred")))
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
debugSource('~/forest_plot.R', echo=TRUE)
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0,
boxsize = 0.1,col = fpColors(box=c("darkred")))
debugSource('~/forest_plot.R', echo=TRUE)
debugSource('~/forest_plot.R', echo=TRUE)
debugSource('~/forest_plot.R', echo=TRUE)
library(readxl)
library(forestplot)
temp = read_excel("C:\\Users\\Fred\\Desktop\\MUHC\\presentation_forest_screens.xlsx")
temp[,4:9] = sapply(temp[,4:9],as.numeric)
colnames(temp)[4] = "sn_mean"
colnames(temp)[5] = "sn_lower"
colnames(temp)[6] = "sn_upper"
colnames(temp)[7] = "sp_mean"
colnames(temp)[8] = "sp_lower"
colnames(temp)[9] = "sp_upper"
colnames(temp)[3] = "humanOR"
append(temp$Reference, list(x=""), 1)
textframe = cbind(temp$Reference,temp$Version,temp$humanOR)
subgps <- c(2,3,5,7,9,10,12)
textframe[subgps] <- paste("  ",textframe[subgps])
graphwidth = 3.5
forestplot(textframe,temp$sn_mean,temp$sn_lower,temp$sn_upper,graphwidth = "auto", zero = 0.5,
boxsize = 0.1,col = fpColors(box=c("blue")))
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.5,
boxsize = 0.1,col = fpColors(box=c("darkred")))
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.7,
boxsize = 0.1,col = fpColors(box=c("darkred")))
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.6,
boxsize = 0.1,col = fpColors(box=c("darkred")))
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-1.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y1<-data1$y
fit.RP1<-lm(y1~x1)
beta0_1 = fit.RP1$coefficients[1]
beta1_1 = fit.RP1$coefficients[2]
res1 = residuals(fit.RP1)
file2<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-2.txt"
data2<-read.table(file2,header=TRUE)
x2<-data2$x
y2<-data2$y
fit.RP2<-lm(y2~x2)
beta0_2 = fit.RP2$coefficients[1]
beta1_2 = fit.RP2$coefficients[2]
res2 = residuals(fit.RP2)
file3<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-3.txt"
data3<-read.table(file3,header=TRUE)
x3<-data3$x
y3<-data3$y
fit.RP3<-lm(y3~x3)
beta0_3 = fit.RP3$coefficients[1]
beta1_3 = fit.RP3$coefficients[2]
res3 = residuals(fit.RP3)
@
names(fit.RP1)
fit.RP1$coefficients
help(cofint)
help("confint")
filter = read.csv("Filter.csv")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
rm(list = ls())
filter = read.csv("Filter.csv")
fit.carsize = lm(yF ~ carsize)
fit.type = lm(yF ~ type)
fit.both = lm(yF ~ carsize + type)
fit.interaction = lm(yF ~ carsize*type)
yF = filter$noise
type = filter$type
carsize = filter$carsize
fit.carsize = lm(yF ~ carsize)
fit.type = lm(yF ~ type)
fit.both = lm(yF ~ carsize + type)
fit.interaction = lm(yF ~ carsize*type)
summary(fit.interaction)
sum(residuals(fit.interaction)^2)
anova(fit.interaction)
fit.nothing = lm(yF ~ 1)
anova(fit.type)
anova(fit.nothing,fit.carsize, fit.type, fit.both, fit.interaction)
anova(fit.type)
a = anova(fit.nothing,fit.type, fit.carsize, fit.both, fit.interaction)
a
a[1,2]
<<format.all, echo = T>>=
format_all = function(...){
library(plyr)
# get all numeric variables
num.obj = ls.str(mode = 'numeric', envir = .GlobalEnv);
# apply format to all numeric variables
l_ply(num.obj, function(.x)
assign(.x, as.numeric(format(get(.x), ...)), envir = .GlobalEnv))
rm(tmp);
}
format_all(digits = 3, nsmall = 2);
library(plyr)
format_all = function(...){
# get all numeric variables
num.obj = ls.str(mode = 'numeric', envir = .GlobalEnv);
# apply format to all numeric variables
l_ply(num.obj, function(.x)
assign(.x, as.numeric(format(get(.x), ...)), envir = .GlobalEnv))
rm(tmp);
}
format_all(digits = 3, nsmall = 2);
assign(.x, as.numeric(format(get(.x), ...)), envir = .GlobalEnv))
library(plyr)
format_all = function(...){
# get all numeric variables
num.obj = ls.str(mode = 'numeric', envir = .GlobalEnv);
# apply format to all numeric variables
l_ply(num.obj, function(.x))
assign(.x, as.numeric(format(get(.x), ...)), envir = .GlobalEnv)
}
format_all(digits = 3, nsmall = 2);
library(plyr)
format_all = function(...){
num.obj = ls.str(mode = 'numeric', envir = .GlobalEnv);
l_ply(num.obj, function(.x))
anova(fit.both)
r = 2
n = 36
p = 4
df1 =r
df2 = n-p
f_stat = a$F
p_value = 1 - pf(f_stat,df1,df2)
a$F
summary(a)
a
a = anova(fit.carsize,fit.interaction)
a
summary(a)
a.2 = anova(fit.carsize,fit.interaction)
a.2$F
a.2$F[last]
a.2$F[end]
a.2$F[2]
View(filter)
f_value2 = ((sum(residuals(fit.carsize)^2) - sum(residuals(fit.interaction)^2))/(2) ) / (sum(residuals(fit.interaction)^2))/32)
(sum(residuals(fit.interaction)^2)/32)
f_value2 = ((sum(residuals(fit.carsize)^2) - sum(residuals(fit.interaction)^2))/(2) ) /
(sum(residuals(fit.interaction)^2)/32)
print(f_value2)
print(num/den)
num = (sum(residuals(fit.carsize)^2) - sum(residuals(fit.interaction)^2) )/(2)
den=  (sum(residuals(fit.interaction)^2)/32)
print(num/den)
anova(fit.interaction,fit.carsize)
sum(residuals(fit.carsize)^2)
print(num/den)
%/2
#/2
num/(2*den)
View(filter)
source('C:/Users/Fred/Desktop/Mcgill/Math423/HW4-423/423-HW4-R/HW4-423-260482457_script.R', echo=TRUE)
source('C:/Users/Fred/Desktop/Mcgill/Math423/HW4-423/423-HW4-R/HW4-423-260482457_script.R', echo=TRUE)
summary(fit.carsize)
anova(fit.carsize)
sum(residuals(fit.carsize)^2)
anova(fit.interaction)
num = (sum(residuals(fit.carsize)^2) - sum(residuals(fit.interaction)^2) )/(2)
den=  (sum(residuals(fit.interaction)^2)/30)
print(num/den)
den=  (sum(residuals(fit.interaction)^2)/33)
print(num/den)
den=  (sum(residuals(fit.interaction)^2)/28)
print(num/den)
den=  (sum(residuals(fit.interaction)^2)/12)
print(num/den)
den=  (sum(residuals(fit.interaction)^2)/14)
print(num/den)
den=  (sum(residuals(fit.interaction)^2)/17)
print(num/den)
den=  (sum(residuals(fit.interaction)^2)/19)
print(num/den)
den=  (sum(residuals(fit.interaction)^2)/20)
print(num/den)
filter[filter$carsize == 1]
filter[filter$carsize == "small car"]
filter[filter$carsize == "small car",]
filter[filter$carsize == "medium car",]
filter[filter$carsize == "large car",]
anova(fit.interaction)
num = (sum(residuals(fit.carsize)^2) - sum(residuals(fit.interaction)^2) )/(2)
den=  (sum(residuals(fit.interaction)^2)/30)
print(num/den)
r1 = (filter[type == "normal fiter"])
r1 = (filter[,type == "normal fiter"])
r1 = (filter[,filter$type == "normal fiter"])
r1
r1 = filter[filter$type == "normal fiter",]
r1
r1 = filter[filter$type == "normal filter",]
r2 = filter[filter$type == "Octel",]
r2 = filter[filter$type == "Octel Filter",]
r2 = filter[filter$type == "Octel filter",]
summary(filter)
summary(r1)
den=  (sum(residuals(fit.interaction)^2)/6)
print(num/den)
den=  (sum(residuals(fit.interaction)^2)12)
den=  (sum(residuals(fit.interaction)^2)/12)
print(num/den)
den=  (sum(residuals(fit.interaction)^2)/18)
print(num/den)
den=  (sum(residuals(fit.interaction)^2)/18 - 4)
print(num/den)
rm(list = ls())
# Chunk 1
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
testScores = read.csv("TestScores.csv",header=TRUE)
testScores$Faculty = as.factor(testScores$Faculty)
yT = testScores$Score
faculty = testScores$Faculty
# Chunk 2
fit.yT = lm(yT ~ faculty);
clrs = c('red','blue','green')
boxplot(residuals(fit.yT)~faculty,vertical = TRUE, col = clrs)
# Chunk 3
anova(fit.yT)
# Chunk 4
library(lsmeans)
means.yT = lsmeans(fit.yT, ~ faculty)
print(means.yT)
# Chunk 5
filter = read.csv("Filter.csv")
filter$carsize = as.factor(filter$carsize)
filter$type = as.factor(filter$type)
yF = filter$noise
type = filter$type
carsize = filter$carsize
# Chunk 6
fit.nothing = lm(yF ~ 1)
fit.carsize = lm(yF ~ carsize)
fit.type = lm(yF ~ type)
fit.both = lm(yF ~ carsize + type)
fit.interaction = lm(yF ~ carsize + type +carsize:type)
# Chunk 7
a.1 = anova(fit.nothing,fit.type, fit.carsize, fit.both, fit.interaction)
print(a.1)
# Chunk 8
a.2 = anova(fit.carsize,fit.interaction)
print(a.2)
# Chunk 9
r = 2
n = 36
p = 4
df1 =r
df2 = n-p
f_stat = a.2$F[2]
p_value = 1 - pf(f_stat,df1,df2)
print(p_value)
anova(fit.interaction )
num = (sum(residuals(fit.carsize)^2) - sum(residuals(fit.interaction)^2) )/(2)
den=  (sum(residuals(fit.interaction)^2)/30)
print(num/den)
num = (sum(residuals(fit.carsize)^2) - sum(residuals(fit.interaction)^2) )/(4)
den=  (sum(residuals(fit.interaction)^2)/30)
print(num/den)
r = 2
n = 36
p = 5
df1 =r
df2 = n-p
f_stat = a.2$F[2]
p_value = 1 - pf(f_stat,df1,df2)
print(p_value)
r = 2
n = 36
p = 5
df1 =r
df2 = n-p
num = (sum(residuals(fit.carsize)^2) - sum(residuals(fit.interaction)^2) )/(5)
den=  (sum(residuals(fit.interaction)^2)/30)
f_stat = num/den
p_value = 1 - pf(f_stat,df1,df2)
print(p_value)
den=  (sum(residuals(fit.interaction)^2)/(n-p))
f_stat = num/den
p_value = 1 - pf(f_stat,df1,df2)
print(p_value)
print(p_value)
f_stat
r = 2
n = 36
p = 6
df1 =r
df2 = n-p
num = (sum(residuals(fit.carsize)^2) - sum(residuals(fit.interaction)^2) )/(df1)
den=  (sum(residuals(fit.interaction)^2)/(df2))
f_stat = num/den
p_value = 1 - pf(f_stat,df1,df2)
print(p_value)
f_stat
