View(big)
source('C:/Users/Fred/Desktop/MUHC/Hack/hack.R', echo=TRUE)
source('C:/Users/Fred/Desktop/MUHC/Hack/hack.R', echo=TRUE)
source('C:/Users/Fred/Desktop/MUHC/Hack/hack.R', echo=TRUE)
install.packages("rJava")
View(big)
source('C:/Users/Fred/Desktop/MUHC/Hack/hack.R', echo=TRUE)
require(rJava)
source('C:/Users/Fred/Desktop/MUHC/Hack/hack.R', echo=TRUE)
source('C:/Users/Fred/Desktop/MUHC/Hack/hack.R', echo=TRUE)
View(big)
liste_fields
all_tables$ph_outcome
big$ph_outcome
summary(big$ph_outcome)
table(big$ph_outcome)
clc
clear
rm(list= ls())
require(xlsx)
require(readxl)
temp = read_excel(""C:\\Users\\Fred\\Desktop\\MUHC\\presentation_forest")
temp = read_excel("C:\\Users\\Fred\\Desktop\\MUHC\\presentation_forest")
temp = read_excel("C:\\Users\\Fred\\Desktop\\MUHC\\presentation_forest.xlsx")
temp
View(temp)
View(temp)
library(forestplot)
install.packages("forestplot")
library(forestplot)
forestplot(temp)
temp = read_excel("C:\\Users\\Fred\\Desktop\\MUHC\\presentation_forest.xlsx")
View(temp)
temp = read_excel("C:\\Users\\Fred\\Desktop\\MUHC\\presentation_forest.xlsx")
View(temp)
View(temp)
names(temp)
colnames(temp)[which(names(temp) == "Sn (95%CI)")] <- "sn_mean"
View(temp)
colnames(temp)[5] = "sn_lower"
View(temp)
colnames(temp)[6] = "sn_upper"
View(temp)
source('~/forest_plot.R', echo=TRUE)
crm
View(temp)
temp[7] = NULL
View(temp)
forestplot(temp)
forestplot(temp,temp$sn_mean,temp$sn_lower,temp$sn_upper)
forestplot("temp"",temp$sn_mean,temp$sn_lower,temp$sn_upper)
""
forestplot("temp",temp$sn_mean,temp$sn_lower,temp$sn_upper)
forestplot(temp[,1:3],temp$sn_mean,temp$sn_lower,temp$sn_upper)
forestplot(temp$Reference,temp$sn_mean,temp$sn_lower,temp$sn_upper)
View(temp)
temp[,4:6] = sapply(temp[,4:6],as.numeric)
forestplot(temp)
forestplot(temp$Reference,temp$sn_mean,temp$sn_lower,temp$sn_upper)
forestplot(c(temp$Reference,temp$Version,temp$`CAD4TB or human reader`),temp$sn_mean,temp$sn_lower,temp$sn_upper)
textframe = temp$Reference
textframe = paste(temp$Reference,temp$Version,temp$`CAD4TB or human reader`)
textframe
forestplot(textframe,temp$sn_mean,temp$sn_lower,temp$sn_upper)
View(temp)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
View(temp)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
temp$Reference
View(temp)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
install_packages("forestplot2")
install.packages("forestplot2")
textframe
temp$Reference
View(temp)
View(temp)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
temp$Reference
temp[3]
temp$Reference[4]
temp$Reference[5]
textframe[textframe == NA] = ""
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
textframe[textframe == NA]
textframe[3]
source('~/forest_plot.R', echo=TRUE)
vignette("forestplot")
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
install.packages(metafor)
source('~/forest_plot.R', echo=TRUE)
install.packages("metafor")
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
vignette(fpcolors)
install.packages("fpcolors")
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
help("forestplot")
#Read in data set 1
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-1.txt"
data1<-read.table(file1,header=TRUE)
plot(data1$x,data1$y,pch=18)
x1<-data1$x
y<-data1$y
rm(list = list())
rm(list())
rm(list=ls())
help(ls)
#Read in data set 1
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-1.txt"
data1<-read.table(file1,header=TRUE)
plot(data1$x,data1$y,pch=18)
x1<-data1$x
y<-data1$y
View(data1)
#Read in data set 1
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-1.txt"
data1<-read.table(file1,header=TRUE)
plot(data1$x,data1$y,pch=18)
x1<-data1$x
y1<-data1$y
fit.RP = lm(y1 ~ x1)
fit.RP
names(fit)
names(fit.RP)
fit.RP$coefficients
knit_with_parameters('C:/Users/Fred/Desktop/Mcgill/Math423/HW1/Math423-HW1-260482457.Rmd')
#Read in data set 1
fit.RP
plot(x1,y)
abline(x1,y)
plot(x1,residuals)
x1
residuals
ris
#Read in data set 1
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-1.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y<-data1$y
fit.RP<-lm(y~x1)
beta0 = fit.RP$coefficients[1]
beta1 = fit.RP$coefficients[2]
points = beta0 + beta1 * x1
ris = y - points
plot(x1,ris)
coef(fit.RP)
residuals(fit.RP)
plot(x1,ris)
plot(x1,residuals(fit.RP))
plot(residuals(fit.RP))
# Chunk 1
#Read in data set 1
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-1.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y<-data1$y
fit.RP<-lm(y~x1)
beta0 = fit.RP$coefficients[1]
beta1 = fit.RP$coefficients[2]
# Chunk 2
plot(x1,y)
abline(beta0, beta1)
# Chunk 3
plot(residuals(fit.RP))
# Chunk 4
#Read in data set 1
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-2.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y<-data1$y
fit.RP<-lm(y~x1)
beta0 = fit.RP$coefficients[1]
beta1 = fit.RP$coefficients[2]
# Chunk 5
plot(x1,y)
abline(beta0, beta1)
# Chunk 6
plot(residuals(fit.RP))
# Chunk 7
#Read in data set 1
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-3.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y<-data1$y
fit.RP<-lm(y~x1)
beta0 = fit.RP$coefficients[1]
beta1 = fit.RP$coefficients[2]
# Chunk 8
plot(x1,y)
abline(beta0, beta1)
# Chunk 9
plot(residuals(fit.RP))
<<echo = TRUE, cache = TRUE>>=
#Read in data set 1
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-2.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y<-data1$y
fit.RP<-lm(y~x1)
beta0 = fit.RP$coefficients[1]
beta1 = fit.RP$coefficients[2]
@
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-2.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y<-data1$y
fit.RP<-lm(y~x1)
beta0 = fit.RP$coefficients[1]
beta1 = fit.RP$coefficients[2]
plot(x1,y)
abline(beta0, beta1)
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-3.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y<-data1$y
fit.RP<-lm(y~x1)
beta0 = fit.RP$coefficients[1]
beta1 = fit.RP$coefficients[2]
<<echo = TRUE, cache = TRUE>>=
plot(x1,y)
plot(x1,y)
plot(x1,y)
plot(x1,y)
abline(beta0, beta1)
plot(residuals(fit.RP))
# Chunk 1
#Read in data set 1
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-1.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y1<-data1$y
fit.RP1<-lm(y1~x1)
beta0_1 = fit.RP1$coefficients[1]
beta1_1 = fit.RP1$coefficients[2]
res1 = residuals(fit.RP1)
file2<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-2.txt"
data2<-read.table(file2,header=TRUE)
x2<-data2$x
y2<-data2$y
fit.RP2<-lm(y2~x2)
beta0_2 = fit.RP2$coefficients[1]
beta1_2 = fit.RP2$coefficients[2]
res2 = residuals(fit.RP2)
file3<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-3.txt"
data3<-read.table(file3,header=TRUE)
x3<-data3$x
y3<-data3$y
fit.RP3<-lm(y3~x3)
beta0_3 = fit.RP3$coefficients[1]
beta1_3 = fit.RP3$coefficients[2]
res3 = residuals(fit.RP3)
# Chunk 2
plot(x1,y1)
abline(beta0_1, beta1_1)
# Chunk 3
plot(res1)
# Chunk 4
plot(x2,y2)
abline(beta0_2, beta1_2)
# Chunk 5
plot(res2)
# Chunk 6
plot(x3,y3)
abline(beta0_3, beta1_3)
# Chunk 7
plot(res3)
res1
library(readxl)
library(forestplot)
temp = read_excel("C:\\Users\\Fred\\Desktop\\MUHC\\presentation_forest.xlsx")
rm(list = ls)
rm(list = ls())
library(readxl)
library(forestplot)
temp = read_excel("C:\\Users\\Fred\\Desktop\\MUHC\\presentation_forest.xlsx")
View(temp)
temp[length(temp)] = NULL
temp[,4:9] = sapply(temp[,4:9],as.numeric)
colnames(temp)[which(names(temp) == "Sn (95%CI)")] <- "sn_mean"
colnames(temp)[5] = "sn_lower"
colnames(temp)[6] = "sn_upper"
colnames(temp)[3] = "humanOR"
colnames(temp)[7] = "sp_mean"
colnames(temp)[8] = "sp_lower"
colnames(temp)[9] = "sp_upper"
forestplot(textframe,temp$sn_mean,temp$sn_lower,temp$sn_upper,graphwidth = "auto", zero = 0.6,
boxsize = 0.1,col = fpColors(box=c("darkred")))
source('~/forest_plot.R', echo=TRUE)
forestplot(textframe,temp$sn_mean,temp$sn_lower,temp$sn_upper,graphwidth = "auto", zero = 0.6,
boxsize = 0.1,col = fpColors(box=c("darkred")))
forestplot(textframe,temp$sn_mean,temp$sn_lower,temp$sn_upper,graphwidth = "auto", zero = 0.6,
source('~/forest_plot.R', echo=TRUE)
debugSource('~/forest_plot.R', echo=TRUE)
debugSource('~/forest_plot.R', echo=TRUE)
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.6,
boxsize = 0.1,col = fpColors(box=c("darkred")))
library(readxl)
library(forestplot)
temp = read_excel("C:\\Users\\Fred\\Desktop\\MUHC\\presentation_forest_screens.xlsx")
temp[,4:9] = sapply(temp[,4:9],as.numeric)
colnames(temp)[which(names(temp) == "Sn (95%CI)")] <- "sn_mean"
colnames(temp)[5] = "sn_lower"
colnames(temp)[6] = "sn_upper"
colnames(temp)[7] = "sp_mean"
colnames(temp)[8] = "sp_lower"
colnames(temp)[9] = "sp_upper"
colnames(temp)[3] = "humanOR"
append(temp$Reference, list(x=""), 1)
textframe = cbind(temp$Reference,temp$Version,temp$humanOR)
subgps <- c(2,3,5,7,9,10,12)
textframe[subgps] <- paste("  ",textframe[subgps])
graphwidth = 3.5
forestplot(textframe,temp$sn_mean,temp$sn_lower,temp$sn_upper,graphwidth = "auto", zero = 0.6,
boxsize = 0.1,col = fpColors(box=c("blue")))
debugSource('~/forest_plot.R', echo=TRUE)
debugSource('~/forest_plot.R', echo=TRUE)
debugSource('~/forest_plot.R', echo=TRUE)
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.6,
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.6,
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.6,
boxsize = 0.1,col = fpColors(box=c("darkred")))
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.6,
boxsize = 0.1,col = fpColors(box=c("darkred")))
source('~/forest_plot.R', echo=TRUE)
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.6,
boxsize = 0.1,col = fpColors(box=c("darkred")))
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
source('~/forest_plot.R', echo=TRUE)
debugSource('~/forest_plot.R', echo=TRUE)
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0,
boxsize = 0.1,col = fpColors(box=c("darkred")))
debugSource('~/forest_plot.R', echo=TRUE)
debugSource('~/forest_plot.R', echo=TRUE)
debugSource('~/forest_plot.R', echo=TRUE)
library(readxl)
library(forestplot)
temp = read_excel("C:\\Users\\Fred\\Desktop\\MUHC\\presentation_forest_screens.xlsx")
temp[,4:9] = sapply(temp[,4:9],as.numeric)
colnames(temp)[4] = "sn_mean"
colnames(temp)[5] = "sn_lower"
colnames(temp)[6] = "sn_upper"
colnames(temp)[7] = "sp_mean"
colnames(temp)[8] = "sp_lower"
colnames(temp)[9] = "sp_upper"
colnames(temp)[3] = "humanOR"
append(temp$Reference, list(x=""), 1)
textframe = cbind(temp$Reference,temp$Version,temp$humanOR)
subgps <- c(2,3,5,7,9,10,12)
textframe[subgps] <- paste("  ",textframe[subgps])
graphwidth = 3.5
forestplot(textframe,temp$sn_mean,temp$sn_lower,temp$sn_upper,graphwidth = "auto", zero = 0.5,
boxsize = 0.1,col = fpColors(box=c("blue")))
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.5,
boxsize = 0.1,col = fpColors(box=c("darkred")))
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.7,
boxsize = 0.1,col = fpColors(box=c("darkred")))
forestplot(textframe,temp$sp_mean,temp$sp_lower,temp$sp_upper,graphwidth = "auto", zero = 0.6,
boxsize = 0.1,col = fpColors(box=c("darkred")))
file1<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-1.txt"
data1<-read.table(file1,header=TRUE)
x1<-data1$x
y1<-data1$y
fit.RP1<-lm(y1~x1)
beta0_1 = fit.RP1$coefficients[1]
beta1_1 = fit.RP1$coefficients[2]
res1 = residuals(fit.RP1)
file2<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-2.txt"
data2<-read.table(file2,header=TRUE)
x2<-data2$x
y2<-data2$y
fit.RP2<-lm(y2~x2)
beta0_2 = fit.RP2$coefficients[1]
beta1_2 = fit.RP2$coefficients[2]
res2 = residuals(fit.RP2)
file3<-"http://www.math.mcgill.ca/dstephens/Regression/Data/a1-3.txt"
data3<-read.table(file3,header=TRUE)
x3<-data3$x
y3<-data3$y
fit.RP3<-lm(y3~x3)
beta0_3 = fit.RP3$coefficients[1]
beta1_3 = fit.RP3$coefficients[2]
res3 = residuals(fit.RP3)
@
names(fit.RP1)
fit.RP1$coefficients
help(cofint)
help("confint")
# Chunk 1
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
smoke<-read.csv("data.csv",header=TRUE)
regressors = smoke[,1:ncol(smoke)-1]
CO = smoke$CO
tar = smoke$TAR
nico = smoke$NICOTINE
weight = smoke$WEIGHT
k = dim(regressors)[2]
n = dim(smoke)[1]
X = cbind(rep(1,n),regressors)
y = smoke[ncol(smoke)]
Xcs = scale(regressors,center = TRUE, scale = TRUE)
Xc = scale(regressors,center = TRUE, scale = FALSE)
# Chunk 2
fit.full = lm(CO ~ tar + nico + weight)
anova.full = anova(fit.full)
m.full = summary(fit.full)
SSres.full = (m.full$sigma)^2 * (m.full$df[2])
SSres.full_2 = sum(residuals(fit.full)^2)
MSres = sqrt(SSres.full/(n - k))
beta.0 = coefficients(fit.full)[1]
beta.1 = coefficients(fit.full)[2]
beta.2 = coefficients(fit.full)[3]
beta.3 = coefficients(fit.full)[4]
BigBeta = coefficients(fit.full)
# Chunk 3
fit.noWeight = lm(CO ~tar + nico)
m.NoWeight = summary(fit.noWeight)
SSres.noWeight = sum(residuals(fit.noWeight)^2)
# Chunk 4
f3 = anova.full[3,4] #directly from anova table
f3_2 = (SSres.noWeight - SSres.full)/(SSres.full / (n-k-1))
f3_3 = anova.full[3,2]/(SSres.full / (n-k))
f3
f3_2
f3_3
# Chunk 5
fit.full_backwards = lm(CO ~ weight + nico + tar)
anova.full_backwards = anova(fit.full_backwards)
anova.full_backwards
# Chunk 6
anova.reduced = anova(fit.noWeight)
anova.reduced
# Chunk 7
anova.noWeight = anova(fit.noWeight)
anova.noWeight
# Chunk 8
fit.nothing = lm(CO ~ 1)
anova.nothing = anova(fit.nothing)
SSres.nothing = anova.nothing[1,2]
r = 2
f_last = ((SSres.nothing - SSres.noWeight) / r) /
(SSres.noWeight/(n-k-r))
f_last
anova(fit.noWeight)
anova(fit.full)
anova(fit.full)
